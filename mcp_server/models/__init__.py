# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T07:44:57+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional

from pydantic import BaseModel


class Concepts(BaseModel):
    nytd_des: Optional[List[str]] = None
    nytd_org: Optional[List[str]] = None
    nytd_per: Optional[List[str]] = None


class Result(BaseModel):
    body: Optional[str] = None
    byline: Optional[str] = None
    concepts: Optional[Concepts] = None
    date: Optional[str] = None
    document_type: Optional[str] = None
    title: Optional[str] = None
    type_of_material: Optional[str] = None
    url: Optional[str] = None


class ArticleList(BaseModel):
    results: Optional[List[Result]] = None
    total: Optional[int] = None


class Combination(BaseModel):
    combination_note: Optional[str] = None
    combination_source_concept_id: Optional[int] = None
    combination_source_concept_name: Optional[str] = None
    combination_source_concept_type: Optional[str] = None
    combination_target_concept_id: Optional[int] = None
    combination_target_concept_name: Optional[str] = None
    combination_target_concept_type: Optional[str] = None


class Link(BaseModel):
    concept_id: Optional[int] = None
    concept_name: Optional[str] = None
    concept_status: Optional[str] = None
    concept_type: Optional[str] = None
    is_times_tag: Optional[int] = None
    link: Optional[str] = None
    link_id: Optional[int] = None
    link_type: Optional[str] = None
    mapping_type: Optional[str] = None
    relation: Optional[str] = None


class ScopeNote(BaseModel):
    scope_note: Optional[str] = None
    scope_note_name: Optional[str] = None
    scope_note_type: Optional[str] = None


class TaxonomyItem(BaseModel):
    source_concept_id: Optional[int] = None
    source_concept_name: Optional[str] = None
    source_concept_type: Optional[str] = None
    source_concept_vernacular: Optional[str] = None
    target_concept_id: Optional[int] = None
    target_concept_name: Optional[str] = None
    target_concept_type: Optional[str] = None
    target_concept_vernacular: Optional[str] = None
    taxonomic_relation: Optional[str] = None
    taxonomic_verification_status: Optional[str] = None


class ConceptRelation(BaseModel):
    concept_created: Optional[str] = None
    concept_id: Optional[int] = None
    concept_name: Optional[str] = None
    concept_status: Optional[str] = None
    concept_type: Optional[str] = None
    concept_updated: Optional[str] = None
    is_times_tag: Optional[int] = None
    vernacular: Optional[str] = None


class Fields(Enum):
    all = 'all'
    pages = 'pages'
    ticker_symbol = 'ticker_symbol'
    links = 'links'
    taxonomy = 'taxonomy'
    combinations = 'combinations'
    geocodes = 'geocodes'
    article_list = 'article_list'
    scope_notes = 'scope_notes'
    search_api_query = 'search_api_query'


class ConceptType(Enum):
    nytd_geo = 'nytd_geo'
    nytd_per = 'nytd_per'
    nytd_org = 'nytd_org'
    nytd_des = 'nytd_des'


class Concept(BaseModel):
    ancestors: Optional[List[ConceptRelation]] = None
    article_list: Optional[ArticleList] = None
    combinations: Optional[List[Combination]] = None
    concept_created: Optional[str] = None
    concept_id: Optional[int] = None
    concept_name: Optional[str] = None
    concept_status: Optional[str] = None
    concept_type: Optional[str] = None
    concept_updated: Optional[str] = None
    descendants: Optional[List[ConceptRelation]] = None
    is_times_tag: Optional[int] = None
    links: Optional[List[Link]] = None
    scope_notes: Optional[List[ScopeNote]] = None
    search_api_query: Optional[str] = None
    taxonomy: Optional[List[TaxonomyItem]] = None
    vernacular: Optional[str] = None
